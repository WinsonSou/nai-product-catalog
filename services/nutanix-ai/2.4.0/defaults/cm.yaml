---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nutanix-ai-2.4.0-nkp-defaults
  namespace: ${workspaceNamespace}
data:
  values.yaml: |
    ---
    # Lables common to add components of nai-core
    labels:
      app.kubernetes.io/name: nai-iep

    # These gateways determine the entry points for your traffic.
    gateway:
      createGatewayClass: true
      gatewayClassName: nai-gatewayclass

    # Image pull secret Details
    imagePullSecret:
      # Name of the image pull secret
      name: nai-iep-secret
      # Image registry credentials
      credentials:
        registry: https://index.registry.wskn.local/library/v1/
        username: USERNAME
        password: PASSWORD
        email: EMAIL

    # Storage class name to be used by nai-db and prometheus db
    defaultStorageClassName: ""

    naiIepOperator:
      # IEP operator image details
      iepOperatorImage:
        # IEP operator image name
        image: registry.wskn.local/library/nutanix/nai-iep-operator
        # IEP operator image tag
        tag: v2.4.0
      
      iepOperatorResources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi

      # Model processor image details
      modelProcessorImage:
        # Model Processor image name
        image: registry.wskn.local/library/nutanix/nai-model-processor
        # Model Processor image tag
        tag: v2.4.0

      # Configuration for resource limits and requests for the model processor.
      modelProcessorResources:
        limits:
          cpu: ""
          memory: ""
        requests:
          cpu: ""
          memory: ""
      
      # Determines whether the model processor job should be retained after completion.
      # Acceptable values:
      # - true: Retain the job after completion.
      # - false: Delete the job after completion.
      retainModelProcessorJob: false

      # Determines whether the model processor job should be run with non root user.
      # Acceptable values:
      # - true: Run container with non root user (nobody).
      # - false: Run container with root user.
      runModelProcessorAsNonRoot: false

    naiInferenceUi:
      # NAI UI image details
      naiUiImage:
        # The name of the NAI UI Docker image
        image: registry.wskn.local/library/nutanix/nai-inference-ui
        # The tag of the Docker image to be used
        tag: v2.4.0
      
      # Resources for nai-ui container
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 2
          memory: 2Gi   

      # The URL for the NAI API service
      naiApiUrl: "http://nai-api.nai-system.svc.cluster.local:7000"

    naiApi:
      # NAI API image details
      naiApiImage:
        # The name of the NAI API Docker image
        image: registry.wskn.local/library/nutanix/nai-api
        # The tag of the Docker image to be used
        tag: v2.4.0

      # Resources for nai-api container
      naiApiResources:
        requests:
          cpu: 2
          memory: 2Gi
        limits:
          cpu: 8
          memory: 4Gi
      
      naiMigrateInitContainerResources:
        requests:
          cpu: 100m
          memory: 50Mi
        limits:
          cpu: 1
          memory: 1Gi   
      
      # Resources for nai-api-db-migrate job container
      naiMigrateJobResources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 1
          memory: 1Gi
      
      # Logger configuration for nai-api
      logger:
        # Log level for nai-api
        # Acceptable values: "debug", "info", "warn", "error"
        logLevel: "info"

      # Details of super admin (first user in the nai system)
      superAdmin:
        username: admin
        password: Nutanix.123
        email: admin@nutanix.com
        firstName: admin

      # Storage class name to be used nai-iep for storing models
      storageClassName: nai-nfs-storage

      # supportedKserveRuntimeVersion Image in model catalog
      supportedKserveRuntimeImage: "registry.wskn.local/library/78945789345654/hf-gpu-fix"
      supportedKserveCPURuntimeImageTag: "v0.15.2"
      supportedKserveGPURuntimeImageTag: "latest-gpu"

      # supportedKserveCustomModelServerRuntime
      supportedKserveCustomModelServerRuntimeImage: "registry.wskn.local/library/nutanix/nai-kserve-custom-model-server"
      supportedKserveCustomModelServerRuntimeImageTag: "v2.4.0"

      #supportedTGIRuntimeImage
      supportedTGIImage: "registry.wskn.local/library/nutanix/nai-tgi"
      supportedTGIImageTag: "3.3.4-b2485c9"
      
      # The URL for NAI prometheus service
      naiMonitoringUrl: "http://nai-prometheus.nai-system.svc.cluster.local:9090"

    naiDatabase:
      external: false
      naiDbImage:
        # The name of the NAI DB Docker image
        image: registry.wskn.local/library/nutanix/nai-postgres:16.1-alpine

      # Postgres sql details
      postgresql:
        postgresUser: nai-api-user
        postgresPassword: nai-api-password
        postgresDatabase: nai_iep
        postgresPort: "5432"
        postgresHost: nai-db

        # SSL mode for postgres connection
        # Acceptable values: "disable", "allow", "prefer", "require", "verify-ca", "verify-full"
        # Default value: "" (empty string) Let Postgres decide the SSL mode
        # disable – No SSL
        # allow – SSL if available, but not required
        # prefer – use SSL first, if failed fallback to plain conection (default)
        # require – Always use SSL (no verification)
        # verify-ca – SSL + certificate authority verification
        # verify-full – SSL + CA + host name verification
        
        # K8s secret named "nai-db-certs" with certificates for SSL connection to be created in the nai-system namespace
        # Override the following values as required
        # - "naiDatabase.postgresql.postgresSSLMode"
        # - "naiDatabase.postgresql.postgresSSLSecretName"
        # - "naiDatabase.postgresql.postgresSSLRootCertName"
        # - "naiDatabase.postgresql.postgresSSLClientCertName"
        # - "naiDatabase.postgresql.postgresSSLClientKeyName"
        postgresSSLMode: ""
        postgresSSLSecretName: nai-db-certs
        postgresSSLRootCertName: ""
        postgresSSLClientCertName: ""
        postgresSSLClientKeyName: "" 
      
      # Resources for nai-db container
      resources:
        requests:
          cpu: 2
          memory: 2Gi
        limits:
          cpu: 4
          memory: 4Gi
      
      # Storage spec for of nai-db
      storageSpec:
        resources:
          requests:
            storage: 4Gi  

    # Values for nai-monitoring stack deployment.
    # Values for node-exporter, kube-scheduler and dcgm-exporter service monitors are populated in env specific values files.
    naiMonitoring:
      ## Deploy prometheus
      ##
      prometheus:
      # Image for prometheus pod
        image:
          registry: quay.io
          repository: prometheus/prometheus
          tag: v2.54.0
        version: v2.54.0
      # Number of prometheus pods to deploy
        replicas: 1
      # Resources for prometheus pod
        resources:
          requests:
            cpu: 2
            memory: 2Gi
          limits:
            cpu: 8
            memory: 4Gi
      # Prometheus db storage spec
        storageSpec:
          resources:
            requests:
              storage: 20Gi
      # PVC retention policy during helm uninstall i.e. if statefulset is deleted.
        persistentVolumeClaimRetentionPolicy:
          whenScaled: Retain
          whenDeleted: Delete

      ## Component scraping kube scheduler
      ##
      kubeScheduler:
        service:
          enabled: false
        serviceMonitor:
          enabled: false
          
      ## Component scraping node exporter
      ##
      nodeExporter:
        serviceMonitor:
          enabled: false

      ## Component scraping dcgm exporter
      ##
      dcgmExporter:
        podLevelMetrics: false
        serviceMonitor:
          enabled: false
      
      ## Component scraping llm exporter
      ##
      llmMetricsExporter:
        tgi:
          serviceMonitor:
            enabled: true
            endpoint:
              targetPort: 8080
            namespaceSelector:
              matchNames:
              - nai-admin
            serviceSelector:
              matchLabels:
                endpoint.iep.nai.nutanix.com/engine: tgi
        nim:
          serviceMonitor:
            enabled: true
            endpoint:
              targetPort: 8000
              path: /v1/metrics
            namespaceSelector:
              matchNames:
              - nai-admin
            serviceSelector:
              matchLabels:
                endpoint.iep.nai.nutanix.com/engine: nim
        vllm:
          serviceMonitor:
            enabled: true
            endpoint:
              targetPort: 8080
            namespaceSelector:
              matchNames:
              - nai-admin
            serviceSelector:
                  matchExpressions:
                  - { key: endpoint.iep.nai.nutanix.com/engine, operator: In, values: [vllm, vllm-cpu] }